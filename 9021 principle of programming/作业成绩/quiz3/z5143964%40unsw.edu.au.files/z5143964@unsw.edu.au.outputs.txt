TEST 1 BEGIN
$ echo 87 1 3 | python3 quiz_3.py
Enter three nonnegative integers: 87 1 3
Here is the grid that has been generated:
    0 0 0
    1 1 1
    0 1 0
---------------North---------
    0 0 0
    1 1 1
    0 1 0
---------------South---------
    0 1 0
    1 1 1
    0 0 0
---------------West---------
    0 1 0
    1 1 0
    0 1 0
---------------East---------
    0 1 0
    1 1 0
    0 1 0
0
0
0
0
{'S': [[2, 1]]}

For triangles pointing S, we have:
     1 triangle of size 2
TEST 1 END

TEST 2 BEGIN
$ echo 90 1 3 | python3 quiz_3.py
Enter three nonnegative integers: 90 1 3
Here is the grid that has been generated:
    0 0 1
    1 1 1
    1 1 1
---------------North---------
    0 0 1
    1 1 1
    1 1 1
---------------South---------
    1 1 1
    1 1 1
    0 0 1
---------------West---------
    1 1 0
    1 1 0
    1 1 1
---------------East---------
    1 1 1
    1 1 0
    1 1 0
0
0
0
0
{'N': [[2, 1]], 'S': [[2, 1]], 'W': [[2, 1]]}

For triangles pointing N, we have:
     1 triangle of size 2

For triangles pointing S, we have:
     1 triangle of size 2

For triangles pointing W, we have:
     1 triangle of size 2
TEST 2 END

TEST 3 BEGIN
$ echo 91 1 4 | python3 quiz_3.py
Enter three nonnegative integers: 91 1 4
Here is the grid that has been generated:
    0 0 0 1
    1 1 1 1
    1 0 0 1
    1 0 0 1
---------------North---------
    0 0 0 1
    1 1 1 1
    1 0 0 1
    1 0 0 1
---------------South---------
    1 0 0 1
    1 0 0 1
    1 1 1 1
    0 0 0 1
---------------West---------
    1 1 1 0
    0 0 1 0
    0 0 1 0
    1 1 1 1
---------------East---------
    1 1 1 1
    0 0 1 0
    0 0 1 0
    1 1 1 0
0
0
0
0
{'W': [[2, 1]]}

For triangles pointing W, we have:
     1 triangle of size 2
TEST 3 END

TEST 4 BEGIN
$ echo 94 1 4 | python3 quiz_3.py
Enter three nonnegative integers: 94 1 4
Here is the grid that has been generated:
    0 0 1 1
    1 0 1 1
    1 1 1 0
    1 0 1 1
---------------North---------
    0 0 1 1
    1 0 1 1
    1 1 1 0
    1 0 1 1
---------------South---------
    1 0 1 1
    1 1 1 0
    1 0 1 1
    0 0 1 1
---------------West---------
    1 1 1 0
    0 1 0 0
    1 1 1 1
    1 0 1 1
---------------East---------
    1 0 1 1
    1 1 1 1
    0 1 0 0
    1 1 1 0
0
0
0
0
{'W': [[2, 1]], 'E': [[2, 2]]}

For triangles pointing E, we have:
     2 triangles of size 2

For triangles pointing W, we have:
     1 triangle of size 2
TEST 4 END

TEST 5 BEGIN
$ echo 200 1 4 | python3 quiz_3.py
Enter three nonnegative integers: 200 1 4
Here is the grid that has been generated:
    0 0 0 0
    1 0 1 0
    0 1 1 1
    1 0 0 0
---------------North---------
    0 0 0 0
    1 0 1 0
    0 1 1 1
    1 0 0 0
---------------South---------
    1 0 0 0
    0 1 1 1
    1 0 1 0
    0 0 0 0
---------------West---------
    1 0 1 0
    0 1 0 0
    0 1 1 0
    0 1 0 0
---------------East---------
    0 1 0 0
    0 1 1 0
    0 1 0 0
    1 0 1 0
0
0
0
0
{'N': [[2, 1]]}

For triangles pointing N, we have:
     1 triangle of size 2
TEST 5 END

TEST 6 BEGIN
$ echo 99 2 4 | python3 quiz_3.py
Enter three nonnegative integers: 99 2 4
Here is the grid that has been generated:
    1 1 0 1
    0 0 0 0
    0 1 1 1
    1 1 1 1
---------------North---------
    1 1 0 1
    0 0 0 0
    0 1 1 1
    1 1 1 1
---------------South---------
    1 1 1 1
    0 1 1 1
    0 0 0 0
    1 1 0 1
---------------West---------
    1 0 0 1
    1 1 0 1
    1 1 0 0
    1 1 0 1
---------------East---------
    1 1 0 1
    1 1 0 0
    1 1 0 1
    1 0 0 1
0
0
0
0
{'N': [[2, 2]], 'S': [[2, 1]]}

For triangles pointing N, we have:
     2 triangles of size 2

For triangles pointing S, we have:
     1 triangle of size 2
TEST 6 END

TEST 7 BEGIN
$ echo 106 2 4 | python3 quiz_3.py
Enter three nonnegative integers: 106 2 4
Here is the grid that has been generated:
    1 1 0 1
    1 1 0 1
    0 0 1 1
    1 1 1 1
---------------North---------
    1 1 0 1
    1 1 0 1
    0 0 1 1
    1 1 1 1
---------------South---------
    1 1 1 1
    0 0 1 1
    1 1 0 1
    1 1 0 1
---------------West---------
    1 0 1 1
    1 0 1 1
    1 1 0 0
    1 1 1 1
---------------East---------
    1 1 1 1
    1 1 0 0
    1 0 1 1
    1 0 1 1
0
0
0
0
{'N': [[2, 1]], 'W': [[2, 1]]}

For triangles pointing N, we have:
     1 triangle of size 2

For triangles pointing W, we have:
     1 triangle of size 2
TEST 7 END

TEST 8 BEGIN
$ echo 106 3 5 | python3 quiz_3.py
Enter three nonnegative integers: 106 3 5
Here is the grid that has been generated:
    1 0 1 0 1
    0 1 1 1 1
    1 1 1 1 1
    1 1 1 1 1
    1 1 0 1 1
---------------North---------
    1 0 1 0 1
    0 1 1 1 1
    1 1 1 1 1
    1 1 1 1 1
    1 1 0 1 1
---------------South---------
    1 1 0 1 1
    1 1 1 1 1
    1 1 1 1 1
    0 1 1 1 1
    1 0 1 0 1
---------------West---------
    1 1 1 0 1
    1 1 1 1 0
    0 1 1 1 1
    1 1 1 1 0
    1 1 1 1 1
---------------East---------
    1 1 1 1 1
    1 1 1 1 0
    0 1 1 1 1
    1 1 1 1 0
    1 1 1 0 1
0
1
0
1
0
1
0
1
{'N': [[3, 2], [2, 5]], 'S': [[2, 7]], 'W': [[3, 1], [2, 8]], 'E': [[2, 7]]}

For triangles pointing N, we have:
     2 triangles of size 3
     5 triangles of size 2

For triangles pointing E, we have:
     7 triangles of size 2

For triangles pointing S, we have:
     7 triangles of size 2

For triangles pointing W, we have:
     1 triangle of size 3
     8 triangles of size 2
TEST 8 END

TEST 9 BEGIN
$ echo 107 3 6 | python3 quiz_3.py
Enter three nonnegative integers: 107 3 6
Here is the grid that has been generated:
    1 1 1 1 1 1
    0 1 1 0 1 1
    1 1 1 1 1 1
    1 0 0 1 0 1
    1 1 1 1 0 1
    1 1 1 1 0 1
---------------North---------
    1 1 1 1 1 1
    0 1 1 0 1 1
    1 1 1 1 1 1
    1 0 0 1 0 1
    1 1 1 1 0 1
    1 1 1 1 0 1
---------------South---------
    1 1 1 1 0 1
    1 1 1 1 0 1
    1 0 0 1 0 1
    1 1 1 1 1 1
    0 1 1 0 1 1
    1 1 1 1 1 1
---------------West---------
    1 1 1 1 0 1
    1 1 0 1 1 1
    1 1 0 1 1 1
    1 1 1 1 0 1
    0 0 0 1 1 1
    1 1 1 1 1 1
---------------East---------
    1 1 1 1 1 1
    0 0 0 1 1 1
    1 1 1 1 0 1
    1 1 0 1 1 1
    1 1 0 1 1 1
    1 1 1 1 0 1
0
1
0
1
0
1
0
1
{'N': [[2, 5]], 'S': [[2, 6]], 'W': [[2, 4]], 'E': [[2, 3]]}

For triangles pointing N, we have:
     5 triangles of size 2

For triangles pointing E, we have:
     3 triangles of size 2

For triangles pointing S, we have:
     6 triangles of size 2

For triangles pointing W, we have:
     4 triangles of size 2
TEST 9 END

TEST 10 BEGIN
$ echo 107 4 7 | python3 quiz_3.py
Enter three nonnegative integers: 107 4 7
Here is the grid that has been generated:
    1 1 1 1 1 1 1
    1 1 0 1 1 1 0
    1 1 1 1 1 1 1
    1 1 1 1 0 0 1
    0 1 1 1 1 1 0
    1 1 1 1 1 0 1
    1 1 1 1 0 1 1
---------------North---------
    1 1 1 1 1 1 1
    1 1 0 1 1 1 0
    1 1 1 1 1 1 1
    1 1 1 1 0 0 1
    0 1 1 1 1 1 0
    1 1 1 1 1 0 1
    1 1 1 1 0 1 1
---------------South---------
    1 1 1 1 0 1 1
    1 1 1 1 1 0 1
    0 1 1 1 1 1 0
    1 1 1 1 0 0 1
    1 1 1 1 1 1 1
    1 1 0 1 1 1 0
    1 1 1 1 1 1 1
---------------West---------
    1 1 0 1 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 0 1
    1 1 1 1 1 1 1
    0 1 1 0 1 1 1
    1 0 1 0 1 1 1
    1 1 0 1 1 0 1
---------------East---------
    1 1 0 1 1 0 1
    1 0 1 0 1 1 1
    0 1 1 0 1 1 1
    1 1 1 1 1 1 1
    1 1 1 1 1 0 1
    1 1 1 1 1 1 1
    1 1 0 1 1 1 1
0
1
2
0
1
2
0
1
2
0
1
2
{'N': [[3, 2], [2, 12]], 'S': [[3, 3], [2, 13]], 'W': [[3, 2], [2, 11]], 'E': [[3, 3], [2, 11]]}

For triangles pointing N, we have:
     2 triangles of size 3
     12 triangles of size 2

For triangles pointing E, we have:
     3 triangles of size 3
     11 triangles of size 2

For triangles pointing S, we have:
     3 triangles of size 3
     13 triangles of size 2

For triangles pointing W, we have:
     2 triangles of size 3
     11 triangles of size 2
TEST 10 END

TEST 11 BEGIN
$ echo 108 4 8 | python3 quiz_3.py
Enter three nonnegative integers: 108 4 8
Here is the grid that has been generated:
    1 0 1 1 1 1 0 1
    1 1 1 1 1 0 1 0
    1 1 0 1 1 1 1 1
    0 1 1 0 1 1 1 1
    1 1 1 0 0 1 1 0
    1 1 1 1 1 0 1 1
    1 1 1 1 1 0 1 1
    1 1 1 0 1 1 0 1
---------------North---------
    1 0 1 1 1 1 0 1
    1 1 1 1 1 0 1 0
    1 1 0 1 1 1 1 1
    0 1 1 0 1 1 1 1
    1 1 1 0 0 1 1 0
    1 1 1 1 1 0 1 1
    1 1 1 1 1 0 1 1
    1 1 1 0 1 1 0 1
---------------South---------
    1 1 1 0 1 1 0 1
    1 1 1 1 1 0 1 1
    1 1 1 1 1 0 1 1
    1 1 1 0 0 1 1 0
    0 1 1 0 1 1 1 1
    1 1 0 1 1 1 1 1
    1 1 1 1 1 0 1 0
    1 0 1 1 1 1 0 1
---------------West---------
    1 1 1 1 0 1 1 1
    1 1 1 1 1 1 1 0
    1 1 1 1 1 0 1 1
    0 1 1 0 0 1 1 1
    1 1 1 0 1 1 1 1
    1 0 0 1 1 1 0 1
    0 1 1 1 1 1 1 0
    1 1 1 0 1 1 0 1
---------------East---------
    1 1 1 0 1 1 0 1
    0 1 1 1 1 1 1 0
    1 0 0 1 1 1 0 1
    1 1 1 0 1 1 1 1
    0 1 1 0 0 1 1 1
    1 1 1 1 1 0 1 1
    1 1 1 1 1 1 1 0
    1 1 1 1 0 1 1 1
0
1
2
0
1
2
0
1
2
0
1
2
{'N': [[3, 1], [2, 12]], 'S': [[3, 2], [2, 13]], 'W': [[3, 2], [2, 14]], 'E': [[3, 1], [2, 14]]}

For triangles pointing N, we have:
     1 triangle of size 3
     12 triangles of size 2

For triangles pointing E, we have:
     1 triangle of size 3
     14 triangles of size 2

For triangles pointing S, we have:
     2 triangles of size 3
     13 triangles of size 2

For triangles pointing W, we have:
     2 triangles of size 3
     14 triangles of size 2
TEST 11 END

TEST 12 BEGIN
$ echo 109 4 12 | python3 quiz_3.py
Enter three nonnegative integers: 109 4 12
Here is the grid that has been generated:
    1 1 1 1 1 0 0 1 1 1 1 1
    1 0 1 1 1 1 1 1 1 1 1 1
    0 1 1 0 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 0 1 1 1 0 1
    1 1 1 1 0 0 1 1 1 1 1 0
    0 1 0 1 1 1 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 1 1 0 1
    0 0 1 1 0 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 0 1 1
    0 0 0 0 1 1 1 1 0 0 1 0
    1 1 1 0 1 1 0 1 0 1 1 1
    1 1 0 1 1 1 0 0 1 0 1 1
---------------North---------
    1 1 1 1 1 0 0 1 1 1 1 1
    1 0 1 1 1 1 1 1 1 1 1 1
    0 1 1 0 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 0 1 1 1 0 1
    1 1 1 1 0 0 1 1 1 1 1 0
    0 1 0 1 1 1 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 1 1 0 1
    0 0 1 1 0 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 0 1 1
    0 0 0 0 1 1 1 1 0 0 1 0
    1 1 1 0 1 1 0 1 0 1 1 1
    1 1 0 1 1 1 0 0 1 0 1 1
---------------South---------
    1 1 0 1 1 1 0 0 1 0 1 1
    1 1 1 0 1 1 0 1 0 1 1 1
    0 0 0 0 1 1 1 1 0 0 1 0
    1 1 1 1 1 1 1 1 1 0 1 1
    0 0 1 1 0 1 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 1 1 0 1
    0 1 0 1 1 1 1 1 1 1 1 1
    1 1 1 1 0 0 1 1 1 1 1 0
    1 1 1 1 1 0 0 1 1 1 0 1
    0 1 1 0 1 1 1 1 1 1 1 1
    1 0 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 0 1 1 1 1 1
---------------West---------
    1 1 0 1 0 0 0 1 1 0 1 1
    1 1 0 1 0 1 1 1 1 1 0 1
    0 1 0 1 1 1 0 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 0 1 1
    1 1 1 1 0 1 1 0 1 1 1 1
    1 1 1 1 1 1 1 0 0 1 1 0
    0 0 1 1 1 1 1 1 0 1 1 0
    0 1 1 1 1 1 1 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 1 1 1
    0 1 0 0 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 1 1 0 1 1 1
    1 1 0 1 1 1 1 0 1 1 1 1
---------------East---------
    1 1 0 1 1 1 1 0 1 1 1 1
    1 1 1 1 1 0 1 1 0 1 1 1
    0 1 0 0 1 1 1 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 1 1 1 1
    0 0 1 1 1 1 1 1 0 1 1 0
    1 1 1 1 1 1 1 0 0 1 1 0
    1 1 1 1 0 1 1 0 1 1 1 1
    1 0 0 1 1 1 1 1 1 0 1 1
    0 1 0 1 1 1 0 1 1 1 1 1
    1 1 0 1 0 1 1 1 1 1 0 1
    1 1 0 1 0 0 0 1 1 0 1 1
0
1
2
3
4
0
1
2
3
4
0
1
2
3
4
0
1
2
3
4
{'N': [[4, 1], [3, 11], [2, 32]], 'S': [[4, 3], [3, 11], [2, 32]], 'W': [[4, 3], [3, 10], [2, 29]], 'E': [[4, 2], [3, 11], [2, 28]]}

For triangles pointing N, we have:
     1 triangle of size 4
     11 triangles of size 3
     32 triangles of size 2

For triangles pointing E, we have:
     2 triangles of size 4
     11 triangles of size 3
     28 triangles of size 2

For triangles pointing S, we have:
     3 triangles of size 4
     11 triangles of size 3
     32 triangles of size 2

For triangles pointing W, we have:
     3 triangles of size 4
     10 triangles of size 3
     29 triangles of size 2
TEST 12 END

TEST 13 BEGIN
$ echo 109 2 15 | python3 quiz_3.py
Enter three nonnegative integers: 109 2 15
Here is the grid that has been generated:
    1 0 1 1 1 0 0 0 1 1 1 1 1 0 0
    1 1 1 1 1 0 1 1 1 1 1 0 1 0 1
    0 1 1 1 0 0 1 1 0 1 1 1 1 0 1
    1 0 0 0 1 0 1 1 1 1 0 1 1 0 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1
    0 1 1 0 1 1 0 1 1 1 0 1 1 1 1
    1 1 0 1 1 1 1 1 0 1 0 0 1 0 0
    1 1 1 0 1 0 1 1 0 1 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 0 0 0 0 0 1
    0 1 1 1 0 0 0 1 0 1 1 0 0 0 0
    0 1 0 0 1 1 1 1 0 1 0 1 1 0 0
    0 0 1 1 0 0 1 0 1 1 1 0 1 1 1
    0 1 0 1 1 1 1 0 1 1 1 1 0 0 1
    1 0 1 0 0 1 1 1 0 1 1 0 0 0 0
    1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
---------------North---------
    1 0 1 1 1 0 0 0 1 1 1 1 1 0 0
    1 1 1 1 1 0 1 1 1 1 1 0 1 0 1
    0 1 1 1 0 0 1 1 0 1 1 1 1 0 1
    1 0 0 0 1 0 1 1 1 1 0 1 1 0 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1
    0 1 1 0 1 1 0 1 1 1 0 1 1 1 1
    1 1 0 1 1 1 1 1 0 1 0 0 1 0 0
    1 1 1 0 1 0 1 1 0 1 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 0 0 0 0 0 1
    0 1 1 1 0 0 0 1 0 1 1 0 0 0 0
    0 1 0 0 1 1 1 1 0 1 0 1 1 0 0
    0 0 1 1 0 0 1 0 1 1 1 0 1 1 1
    0 1 0 1 1 1 1 0 1 1 1 1 0 0 1
    1 0 1 0 0 1 1 1 0 1 1 0 0 0 0
    1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
---------------South---------
    1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    1 0 1 0 0 1 1 1 0 1 1 0 0 0 0
    0 1 0 1 1 1 1 0 1 1 1 1 0 0 1
    0 0 1 1 0 0 1 0 1 1 1 0 1 1 1
    0 1 0 0 1 1 1 1 0 1 0 1 1 0 0
    0 1 1 1 0 0 0 1 0 1 1 0 0 0 0
    1 0 0 1 1 1 1 1 1 0 0 0 0 0 1
    1 1 1 0 1 0 1 1 0 1 1 1 1 1 1
    1 1 0 1 1 1 1 1 0 1 0 0 1 0 0
    0 1 1 0 1 1 0 1 1 1 0 1 1 1 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1
    1 0 0 0 1 0 1 1 1 1 0 1 1 0 1
    0 1 1 1 0 0 1 1 0 1 1 1 1 0 1
    1 1 1 1 1 0 1 1 1 1 1 0 1 0 1
    1 0 1 1 1 0 0 0 1 1 1 1 1 0 0
---------------West---------
    1 1 0 0 0 0 1 1 1 0 1 1 0 1 1
    1 0 1 0 1 1 0 1 1 1 1 0 1 1 0
    1 1 0 1 0 1 0 1 0 1 1 0 1 1 1
    1 0 1 1 0 1 1 0 1 0 0 0 1 1 1
    1 0 1 0 1 0 1 1 1 1 1 1 0 1 1
    1 1 1 0 1 0 1 0 1 1 0 0 0 0 0
    1 1 1 1 1 0 1 1 1 0 1 1 1 1 0
    1 1 0 0 1 1 1 1 1 1 1 1 1 1 0
    1 0 1 1 0 0 1 0 0 1 1 1 0 1 1
    1 1 1 1 1 1 0 1 1 1 1 1 1 1 1
    1 1 1 1 0 1 0 1 0 0 1 0 1 1 1
    1 0 1 0 1 0 0 1 0 1 1 1 1 0 1
    1 0 0 1 1 0 0 1 1 1 0 1 1 1 1
    1 0 0 1 0 0 0 1 0 1 0 0 0 0 0
    0 0 1 1 0 0 1 1 0 1 1 1 1 1 0
---------------East---------
    0 0 1 1 0 0 1 1 0 1 1 1 1 1 0
    1 0 0 1 0 0 0 1 0 1 0 0 0 0 0
    1 0 0 1 1 0 0 1 1 1 0 1 1 1 1
    1 0 1 0 1 0 0 1 0 1 1 1 1 0 1
    1 1 1 1 0 1 0 1 0 0 1 0 1 1 1
    1 1 1 1 1 1 0 1 1 1 1 1 1 1 1
    1 0 1 1 0 0 1 0 0 1 1 1 0 1 1
    1 1 0 0 1 1 1 1 1 1 1 1 1 1 0
    1 1 1 1 1 0 1 1 1 0 1 1 1 1 0
    1 1 1 0 1 0 1 0 1 1 0 0 0 0 0
    1 0 1 0 1 0 1 1 1 1 1 1 0 1 1
    1 0 1 1 0 1 1 0 1 0 0 0 1 1 1
    1 1 0 1 0 1 0 1 0 1 1 0 1 1 1
    1 0 1 0 1 1 0 1 1 1 1 0 1 1 0
    1 1 0 0 0 0 1 1 1 0 1 1 0 1 1
0
1
2
3
4
5
6
0
1
2
3
4
5
6
0
1
2
3
4
5
6
0
1
2
3
4
5
6
{'N': [[3, 1], [2, 27]], 'S': [[2, 25]], 'W': [[3, 1], [2, 23]], 'E': [[3, 2], [2, 22]]}

For triangles pointing N, we have:
     1 triangle of size 3
     27 triangles of size 2

For triangles pointing E, we have:
     2 triangles of size 3
     22 triangles of size 2

For triangles pointing S, we have:
     25 triangles of size 2

For triangles pointing W, we have:
     1 triangle of size 3
     23 triangles of size 2
TEST 13 END

TEST 14 BEGIN
$ echo 109 5 20 | python3 quiz_3.py
Enter three nonnegative integers: 109 5 20
Here is the grid that has been generated:
    1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1
    0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1 0
    0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1
    0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1
    1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1
    1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1
    1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1
    1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0
    1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0
    1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1
    1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1
---------------North---------
    1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1
    0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1 0
    0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1
    0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1
    1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1
    1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1
    1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1
    1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0
    1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0
    1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1
    1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1
---------------South---------
    1 1 0 0 0 1 1 0 1 1 0 0 1 1 1 1 1 0 1 1
    1 1 1 1 1 1 1 0 0 1 1 1 0 1 1 1 1 1 1 1
    1 0 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0
    1 1 1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 0 1 0
    1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 0 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 0
    1 1 0 1 1 1 0 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 1 1 1 1 1 0 1 1 0 1 0 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1 1 1
    1 1 1 1 1 1 0 0 1 0 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 0 1 1 1 1 1 1 1 1 0 1 0 1
    0 1 1 1 1 0 0 1 1 0 1 1 1 1 1 1 0 1 1 1
    0 1 1 0 1 1 1 0 1 1 0 1 1 0 1 1 1 1 1 1
    1 1 0 1 1 1 1 1 1 0 0 0 0 1 1 1 1 1 1 0
    0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 0 1
    1 1 1 0 1 0 1 1 1 1 1 1 0 0 1 0 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 0 1 1 1 1 0 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 0 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 0 0 1 1 1 1 1 1 0 1 1 1 1 1 1
---------------West---------
    1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1
    1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1
    0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1
    0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1
    0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0
    1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0
    0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1
    1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1
    1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1
    0 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1
    1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 1
    1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0
    1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 1
    1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1
    0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1
    1 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1
---------------East---------
    1 1 0 0 1 0 1 1 1 1 1 1 1 0 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 0 1 1 1 1
    0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 1 1 0 1 0 0 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 0 1 1 1 1 1 1 1 0 0 1 1
    1 1 1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 1
    1 1 1 1 1 1 0 1 1 1 1 1 0 1 1 1 0 1 1 0
    1 0 1 1 1 1 0 1 1 1 1 1 1 0 1 1 0 1 1 1
    0 1 1 1 1 1 1 0 0 1 1 1 1 0 1 1 1 1 1 1
    0 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 1 0 0 1
    1 1 1 1 1 1 1 0 1 0 1 0 1 0 1 1 1 1 1 1
    1 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1
    0 0 1 1 1 0 1 1 1 0 0 1 0 1 1 1 1 1 1 1
    1 1 1 1 1 0 0 0 0 0 1 0 1 1 1 1 1 1 0 0
    1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 0 0 1 1 0
    0 1 1 1 1 1 1 1 1 1 1 1 1 1 0 1 1 1 1 1
    0 1 1 1 0 1 1 1 1 1 1 1 0 1 1 1 0 1 1 1
    0 1 0 1 1 1 0 1 1 1 1 1 1 0 1 1 1 1 1 1
    1 1 0 1 1 0 1 1 1 1 1 1 1 1 0 1 1 1 1 1
    1 1 1 1 1 1 1 1 1 1 1 0 0 1 0 1 1 1 1 1
0
1
2
3
4
5
6
7
8
0
1
2
3
4
5
6
7
8
0
1
2
3
4
5
6
7
8
0
1
2
3
4
5
6
7
8
{'N': [[4, 3], [3, 42], [2, 106]], 'S': [[4, 4], [3, 38], [2, 109]], 'W': [[4, 5], [3, 37], [2, 109]], 'E': [[4, 5], [3, 40], [2, 108]]}

For triangles pointing N, we have:
     3 triangles of size 4
     42 triangles of size 3
     106 triangles of size 2

For triangles pointing E, we have:
     5 triangles of size 4
     40 triangles of size 3
     108 triangles of size 2

For triangles pointing S, we have:
     4 triangles of size 4
     38 triangles of size 3
     109 triangles of size 2

For triangles pointing W, we have:
     5 triangles of size 4
     37 triangles of size 3
     109 triangles of size 2
TEST 14 END

